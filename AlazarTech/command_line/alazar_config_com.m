global boardHandle
global systemId
global boardId
global samplesPerSec;

% Add path to AlazarTech mfiles
addpath('C:\AlazarTech\ATS-SDK\7.5.0\Samples_MATLAB\Include')

% Call mfile with library definitions
AlazarDefs

% Load driver library
alazarLoadLibrary()


% Get a handle to the board
samplesPerSec = 125000000.0;
systemId = int32(1);
boardId = int32(1);
boardHandle = AlazarGetBoardBySystemID(systemId, boardId);



AlazarSetCaptureClock(boardHandle, ...
                      INTERNAL_CLOCK, ...
                      SAMPLE_RATE_125MSPS, ...
                      CLOCK_EDGE_RISING, ...
                      0);
                              
% Select channel A input parameters as required.
AlazarInputControlEx(boardHandle, ...
                     CHANNEL_A, ...
                     DC_COUPLING, ...
                     INPUT_RANGE_PM_80_MV, ...
                     IMPEDANCE_50_OHM);
                          
% Select channel A bandwidth limit as required
AlazarSetBWLimit(boardHandle, ...
                 CHANNEL_A, ...
                 0); % no bandwidt limit (full)
                         
% Select channel B input parameters as required.
AlazarInputControlEx(boardHandle, ...
                     CHANNEL_B, ...
                     DC_COUPLING, ...
                     INPUT_RANGE_PM_4_V, ...
                     IMPEDANCE_50_OHM); 
                          
% Select channel B bandwidth limit as required
AlazarSetBWLimit(boardHandle, ...
                 CHANNEL_B, ...
                 0); % no bandwidt limit (full)
                        
% Select trigger inputs and levels as required
AlazarSetTriggerOperation(boardHandle,...
                          TRIG_ENGINE_OP_J, ...
                          TRIG_ENGINE_J, ...
                          TRIG_CHAN_B, ...
                          TRIGGER_SLOPE_POSITIVE, ...
                          141, ...
                          TRIG_ENGINE_K, ...
                          TRIG_DISABLE, ...
                          TRIGGER_SLOPE_POSITIVE, ...
                          128);


% Set trigger delay as required.
triggerDelay_sec = 0;
triggerDelay_samples = uint32(floor(triggerDelay_sec * samplesPerSec + 0.5));
AlazarSetTriggerDelay(boardHandle, triggerDelay_samples);

% Set trigger timeout as required    
AlazarSetTriggerTimeOut(boardHandle, 0);


